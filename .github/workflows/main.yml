name: building sturdynet images (target->ipq40xx)

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["ipq40xx"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: self-hosted
    container: sturdynetoci/docker-openwrt-imagebuilder:22.03.1-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: mkdir -p "${GITHUB_WORKSPACE}/bin"
      - run: ./build.sh
      - run: mkdir -p "${GITHUB_WORKSPACE}/public/${GITHUB_REF##*/}"
      - run: mv LICENSE "${GITHUB_WORKSPACE}/public/${GITHUB_REF##*/}"
      - run: mv "${GITHUB_WORKSPACE}/bin" "${GITHUB_WORKSPACE}/public/${GITHUB_REF##*/}/images"
      - run: ./generate-webpage.sh "${GITHUB_WORKSPACE}/public/${GITHUB_REF##*/}" > "${GITHUB_WORKSPACE}/public/${GITHUB_REF##*/}/index.html"
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload public repository
          path: public
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
      - name: LOGIN TO OPENWISP
        run: |
          echo login_response=$( \
          curl --request POST \
          --location 'https://owisp.sturdynet.net/api/v1/users/token/' \
          --header 'Content-Type:application/json' \
          --data '{"username":"praval","password":"vsat06$$"}' \
          ) >> $GITHUB_ENV
      - name: GET BEARER TOKEN
        run: |
          echo bearer_token=$( \
          echo $login_response | sed "s/{.*\"token\":\"\([^\"]*\).*}/\1/g" \
          ) >> $GITHUB_ENV
      - run: cd ${GITHUB_WORKSPACE}/public/${GITHUB_REF##*/}/images/
      - name: POST FIRMWARE IMAGE
        run: |
          echo post_firware_image=$( \
          curl --request POST \
          --location 'https://owisp.sturdynet.net/api/v1/firmware-upgrader/build/881702f1-f66e-4b5b-ba71-2fec7e506604/image/' \
          --header 'Authorization: Bearer ${{ env.bearer_token }}' \
          --form 'type="openwrt-22.03.1-ipq40xx-generic-glinet_gl-ap1300-squashfs-nand-sysupgrade.bin"' \
          --form 'file=@"openwrt-22.03.1-ipq40xx-generic-glinet_gl-ap1300-squashfs-nand-sysupgrade.bin"' \
          ) >> $GITHUB_ENV
      - run: echo $post_firmware_image
